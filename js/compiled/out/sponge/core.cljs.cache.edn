;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name sponge.core, :imports nil, :requires {string clojure.string, clojure.string clojure.string, emu sponge.emulator, sponge.emulator sponge.emulator, ex sponge.examples, sponge.examples sponge.examples, reagent reagent.core, reagent.core reagent.core}, :uses nil, :defs {code-input {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 122, :column 7, :end-line 122, :end-column 17, :arglists (quote ([]))}, :name sponge.core/code-input, :variadic false, :file "src/cljs/sponge/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 192, :column 16, :end-line 192, :end-column 20, :export true, :arglists (quote ([]))}, :name sponge.core/main, :variadic false, :file "src/cljs/sponge/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, program-run {:name sponge.core/program-run, :file "src/cljs/sponge/core.cljs", :line 14, :column 1, :end-line 14, :end-column 17, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 14, :column 6, :end-line 14, :end-column 17}}, visualizer {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 111, :column 7, :end-line 111, :end-column 17, :arglists (quote ([run {:keys [scrubber], :as ui}]))}, :name sponge.core/visualizer, :variadic false, :file "src/cljs/sponge/core.cljs", :end-column 17, :method-params ([run p__33441]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 2, :fn-var true, :arglists (quote ([run {:keys [scrubber], :as ui}]))}, scrubber {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 34, :column 7, :end-line 34, :end-column 15, :arglists (quote ([run]))}, :name sponge.core/scrubber, :variadic false, :file "src/cljs/sponge/core.cljs", :end-column 15, :method-params ([run]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([run]))}, register-bank {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 54, :column 7, :end-line 54, :end-column 20, :arglists (quote ([regs names]))}, :name sponge.core/register-bank, :variadic false, :file "src/cljs/sponge/core.cljs", :end-column 20, :method-params ([regs names]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([regs names]))}, registers {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 79, :column 7, :end-line 79, :end-column 16, :arglists (quote ([regs]))}, :name sponge.core/registers, :variadic false, :file "src/cljs/sponge/core.cljs", :end-column 16, :method-params ([regs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([regs]))}, grid {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 86, :column 7, :end-line 86, :end-column 11, :arglists (quote ([step]))}, :name sponge.core/grid, :variadic false, :file "src/cljs/sponge/core.cljs", :end-column 11, :method-params ([step]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([step]))}, tools {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 134, :column 7, :end-line 134, :end-column 12, :arglists (quote ([]))}, :name sponge.core/tools, :variadic false, :file "src/cljs/sponge/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, dev-setup {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 182, :column 7, :end-line 182, :end-column 16, :arglists (quote ([]))}, :name sponge.core/dev-setup, :variadic false, :file "src/cljs/sponge/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, page {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 145, :column 7, :end-line 145, :end-column 11, :arglists (quote ([program-run]))}, :name sponge.core/page, :variadic false, :file "src/cljs/sponge/core.cljs", :end-column 11, :method-params ([program-run]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([program-run]))}, debug? {:name sponge.core/debug?, :file "src/cljs/sponge/core.cljs", :line 11, :column 1, :end-line 11, :end-column 16, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 11, :column 10, :end-line 11, :end-column 16}}, print-button {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 27, :column 7, :end-line 27, :end-column 19, :arglists (quote ([run]))}, :name sponge.core/print-button, :variadic false, :file "src/cljs/sponge/core.cljs", :end-column 19, :method-params ([run]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([run]))}, ui {:name sponge.core/ui, :file "src/cljs/sponge/core.cljs", :line 15, :column 1, :end-line 15, :end-column 8, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 15, :column 6, :end-line 15, :end-column 8}}, run-button {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 19, :column 7, :end-line 19, :end-column 17, :arglists (quote ([]))}, :name sponge.core/run-button, :variadic false, :file "src/cljs/sponge/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, examples {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 125, :column 7, :end-line 125, :end-column 15, :arglists (quote ([]))}, :name sponge.core/examples, :variadic false, :file "src/cljs/sponge/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, reload {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/sponge/src/cljs/sponge/core.cljs", :line 188, :column 7, :end-line 188, :end-column 13, :arglists (quote ([]))}, :name sponge.core/reload, :variadic false, :file "src/cljs/sponge/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:y :scrubber :button.print :plot :min :ip i :transform p :button.run a :div#footer :key :disabled :button :div#visualizer :value o :width :div#main :textAnchor :g#grid :type :src :state :g.register :div#tools :style :rows n :div :option m :text.value :g :span.total :cols :span.current :div.column :max e :g#registers k :svg l :div.column.center c :h2 g :text.name :x :input :textarea#program :div#scrubber j :h1 :onChange h :rect :p b :onClick :href :img :a :height :select :div.column.last :text d f}, :order [:scrubber :button.run :onClick :button.print :div#scrubber :input :disabled :type :min :max :onChange :ip :span.current :span.total :textAnchor :style :g :transform :g.register :key :text.value :x :y :text.name :rect :width :height :g#registers a b c d e f g h i j k l m n o p :plot :state :g#grid :text :div#visualizer :svg :textarea#program :rows :cols :select :option :value :div#tools :button :img :src :div :h1 :div#main :div.column :h2 :div.column.center :div.column.last :div#footer :p :a :href]}, :doc nil}